apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "defectdojo.fullname" . }}-initializer
  labels:
    app.kubernetes.io/name: {{ include "defectdojo.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "defectdojo.chart" . }}
spec:
  ttlSecondsAfterFinished: {{ .Values.initializerJobTTLSecondsAfterFinished }}
  template:
    spec:
      containers:
        - name: initializer
          image: "{{ .Values.djangoImage }}:{{ .Values.djangoTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          env:
            - name: _DD_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: defectdojo-secret
                  key: db-username
            - name: _DD_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: defectdojo-secret
                  key: db-password
            - name: DD_DATABASE_URL
              value: 'postgresql://$(_DD_DB_USERNAME):$(_DD_DB_PASSWORD)@{{ include "defectdojo.fullname" . }}-postgres:5432/defectdojo'
            - name: DD_INITIALIZE
              value: "true"
            - name: DD_CREDENTIAL_AES_256_KEY
              valueFrom:
                secretKeyRef:
                  name: defectdojo-secret
                  key: credential-aes-256-key
            - name: DD_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: defectdojo-secret
                  key: secret-key
          command: ["/wait-for-it.sh", '{{ include "defectdojo.fullname" . }}-postgres:5432', "--", "/entrypoint-initializer.sh"]
      restartPolicy: Never