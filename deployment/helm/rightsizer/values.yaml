databaseName: custodian_as_a_service
modularDatabaseName: custodian_as_a_service
innerCacheTTLSeconds: '300'

service:
  type: ClusterIP
  port: 8000
  nodePort: 32106

image:
  repository: public.ecr.aws/x4s4z8e1/rightsizer
  tag: awsmp
  pullPolicy: Always

replicas: 1
strategy:
  type: RollingUpdate
  maxUnavailable: 0
  maxSurge: 100%

mongoService: mongo
mongoPort: 27017
vaultService: vault
vaultPort: 8200
minioService: minio
minioPort: 9000

vault:
  enabled: true
  fullnameOverride: vault
minio:
  enabled: true
  fullnameOverride: minio
  service:
    type: NodePort
mongo:
  enabled: true
  fullnameOverride: mongo
modular-service:
  enabled: true
  fullnameOverride: modular-service
modular-api:
  enabled: true
  fullnameOverride: modular-api
  image:
    tag: 4.1.0-rightsizer
metric-collector:
  enabled: true
  fullnameOverride: metric-collector

modularSdk:
  logLevel: WARNING

  serviceMode: docker
  dbBackend: ''
  modular_secrets_service_mode: 'docker' # saas for SSM, docker for Vault

  # for "mongo" dbBackend
  mongoUri:
  databaseName: r8s

  # for "dynamo" dbBackend
  awsRegion:
  assumeRoleArn:

rightsizer:
  service_mode_s3: docker