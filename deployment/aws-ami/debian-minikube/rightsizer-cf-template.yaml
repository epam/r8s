AWSTemplateFormatVersion: "2010-09-09"
Description: "Syndicate RightSizer AMI deployment template"
Parameters:
  SubnetId:
    Description: "ID of a subnet within the VPC"
    Type: "AWS::EC2::Subnet::Id"
  SecurityGroupIds:
    Description: "Security groups to attach to the instance. Must allow TCP traffic on 80, 8085, 9000 ports by default"
    Type: "List<AWS::EC2::SecurityGroup::Id>"
  KeyName:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instances"
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: "must be the name of an existing EC2 KeyPair."
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: "AMI ID to launch the instance"
  InstanceType:
    Description: "EC2 Instance type"
    Type: String
    Default: c7g.large
    ConstraintDescription: "must be ARM-based instance type, m7g.medium is minimal required type"
    AllowedValues:
      - m7g.large
      - m7g.xlarge
      - r7g.large
      - r7g.xlarge
      - c7g.large
      - c7g.xlarge
  InstanceName:
    Description: "Name for the Syndicate RightSizer instance. Keep empty to give it the name of the stack"
    Type: String
    Default: ""
  InstanceRoleName:
    Description: "IAM Role name to attach to the instance. Keep empty to start instance without attached role"
    Type: String
    Default: ""
Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      SubnetId:
        default: "Subnet where to launch the instance. Must be within the VPC"
      SecurityGroupIds:
        default: "Security groups to attach to instance"
      KeyName:
        default: "SSH Key pair name"
      InstanceName:
        default: "Instance name"
      InstanceType:
        default: "Graviton Instance Type"
      InstanceRoleName:
        default: "IAM Role name"
    ParameterGroups:
      - Label:
          default: "Network configuration"
        Parameters:
          - SubnetId
          - SecurityGroupIds
      - Label:
          default: "EC2 Instance configuration"
        Parameters:
          - InstanceName
          - InstanceType
          - KeyName
          - InstanceRoleName
Conditions:
  AttachRole: !Not [!Equals [!Ref InstanceRoleName, ""]]
  IsInstanceNameGiven: !Not [!Equals [!Ref InstanceName, ""]]
Resources:
  SyndicateRightSizerLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-imdsv2-launch-template
      LaunchTemplateData:
        MetadataOptions:
          HttpEndpoint: enabled
          HttpPutResponseHopLimit: 3
          HttpTokens: required
  SyndicateRightSizerInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Condition: AttachRole
    Properties:
      Roles:
        - !Ref InstanceRoleName
  SyndicateRightSizerInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT20M
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !If [AttachRole, !Ref SyndicateRightSizerInstanceProfile, !Ref "AWS::NoValue"]
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !If [IsInstanceNameGiven, !Ref InstanceName, !Ref "AWS::StackName"]
      SubnetId: !Ref SubnetId
      SecurityGroupIds: !Ref SecurityGroupIds
      LaunchTemplate:
        LaunchTemplateId: !Ref SyndicateRightSizerLaunchTemplate
        Version: !GetAtt SyndicateRightSizerLaunchTemplate.DefaultVersionNumber
      UserData:
        Fn::Base64: !Sub |
          export CF_STACK_NAME="${AWS::StackName}"
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
Outputs:
  InstanceId:
    Value: !GetAtt SyndicateRightSizerInstance.InstanceId
  PublicIp:
    Value: !GetAtt SyndicateRightSizerInstance.PublicIp